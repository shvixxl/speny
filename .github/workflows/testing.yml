name: Testing

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

env:
  python_version: 3.10.4

permissions:
  contents: read

jobs:
  lint:
    name: Run lints
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.python_version }}

      - name: Restore cached Poetry installation
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: ${{ runner.os }}-poetry

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Restore cached Poetry virtual environment
        id: restore-cached-poetry-virtual-environment
        uses: actions/cache@v3
        with:

          path: .venv
          key: ${{ runner.os }}-${{ env.python-version }}-virtual-environment-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-${{ env.python-version }}-virtual-environment-

      - name: Install dependencies
        if: steps.restore-cached-poetry-virtual-environment.outputs.cache-hit != 'true'
        working-directory: ${{ env.working-directory }}
        run: |
          poetry install --no-interaction

      - name: Run Pylint
        run: |
          poetry run pylint --fail-under 9 speny tests

  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.python_version }}

      - name: Restore cached Poetry installation
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: ${{ runner.os }}-poetry

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Restore cached Poetry virtual environment
        id: restore-cached-poetry-virtual-environment
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-${{ env.python-version }}-virtual-environment-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-${{ env.python-version }}-virtual-environment-

      - name: Install dependencies
        if: steps.restore-cached-poetry-virtual-environment.outputs.cache-hit != 'true'
        working-directory: ${{ env.working-directory }}
        run: |
          poetry install --no-interaction

      - name: Run pytest
        run: |
          poetry run pytest --cov=speny --cov=tests --cov-report=xml

      - name: Upload coverage on Codecov
        uses: codecov/codecov-action@v3

  analyze:
    name: Run analyses
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python

      - name: Build CodeQL
        uses: github/codeql-action/autobuild@v2

      - name: Run CodeQL analysis
        uses: github/codeql-action/analyze@v2

  build:
    name: Run builds
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        uses: docker/build-push-action@v3
