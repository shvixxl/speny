name: 🧪 Test

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

env:
  python_version: "3.10"

jobs:
  run-tests:
    name: 🧪 Run tests
    runs-on: ubuntu-latest
    steps:
      - name: 🐙 Check out repository
        uses: actions/checkout@v3

      - name: 🔧 Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.python_version }}

      - name: 💾 Load cached Poetry
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: ${{ runner.os }}-poetry

      - name: 📦 Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true

      - name: 💾 Restore cached virtual environment
        id: restore-cached-virtual-environment
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-${{ env.python-version }}-virtual-environment-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-${{ env.python-version }}-virtual-environment-

      - name: 📦 Install dependencies
        if: steps.restore-cached-virtual-environment.outputs.cache-hit != 'true'
        working-directory: ${{ env.working-directory }}
        run: |
          poetry install --no-interaction --with test

      - name: 👁️ Run lints
        run: |
          poetry run ruff .

      - name: 🧪 Run tests
        run: |
          poetry run pytest
